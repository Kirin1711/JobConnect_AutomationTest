// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using jobconnect.Models;

#nullable disable

namespace jobconnect.Migrations
{
    [DbContext(typeof(RecruitmentManagementContext))]
    [Migration("20241116114829_AddStatusToJobs")]
    partial class AddStatusToJobs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("jobconnect.Models.Application", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ApplicationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationId"));

                    b.Property<DateTime?>("ApplicationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("CoverLetter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cv")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CV");

                    b.Property<int?>("JobId")
                        .HasColumnType("int")
                        .HasColumnName("JobID");

                    b.Property<int?>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ApplicationId")
                        .HasName("PK__Applicat__C93A4F792319A25E");

                    b.HasIndex("JobId");

                    b.HasIndex("StatusId");

                    b.HasIndex("UserId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("jobconnect.Models.ApplicationStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StatusId"));

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StatusId")
                        .HasName("PK__Applicat__C8EE20430E0F1444");

                    b.HasIndex(new[] { "StatusName" }, "UQ__Applicat__05E7698A227D0D7F")
                        .IsUnique();

                    b.ToTable("ApplicationStatus", (string)null);
                });

            modelBuilder.Entity("jobconnect.Models.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AvartarCompanies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("EmailCompanies")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("FieldId")
                        .HasColumnType("int")
                        .HasColumnName("FieldID");

                    b.Property<string>("Phone")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyId")
                        .HasName("PK__Companie__2D971C4C633334A9");

                    b.HasIndex("FieldId");

                    b.HasIndex(new[] { "EmailCompanies" }, "UQ__Companie__B805C4A49331EDEE")
                        .IsUnique()
                        .HasFilter("[EmailCompanies] IS NOT NULL");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("jobconnect.Models.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FeedbackID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedbackId"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FeedbackDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("InterviewId")
                        .HasColumnType("int")
                        .HasColumnName("InterviewID");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.HasKey("FeedbackId")
                        .HasName("PK__Feedback__6A4BEDF6F9A99058");

                    b.HasIndex("InterviewId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("jobconnect.Models.Field", b =>
                {
                    b.Property<int>("FieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FieldID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FieldId"));

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("FieldId")
                        .HasName("PK__Fields__C8B6FF274CC170CA");

                    b.HasIndex(new[] { "FieldName" }, "UQ__Fields__A88707A67B87F19A")
                        .IsUnique();

                    b.ToTable("Fields");
                });

            modelBuilder.Entity("jobconnect.Models.Interview", b =>
                {
                    b.Property<int>("InterviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("InterviewID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InterviewId"));

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("int")
                        .HasColumnName("ApplicationID");

                    b.Property<DateTime?>("InterviewDate")
                        .HasColumnType("datetime");

                    b.Property<string>("InterviewLocation")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("InterviewType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("InterviewId")
                        .HasName("PK__Intervie__C97C58321209B23E");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Interviews");
                });

            modelBuilder.Entity("jobconnect.Models.Job", b =>
                {
                    b.Property<int>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("JobID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobId"));

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExperienceLevel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("JobTypeId")
                        .HasColumnType("int")
                        .HasColumnName("JobTypeID");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int")
                        .HasColumnName("LocationID");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("ProfessionId")
                        .HasColumnType("int")
                        .HasColumnName("ProfessionID");

                    b.Property<string>("SalaryRange")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("JobId")
                        .HasName("PK__Jobs__056690E288526EB7");

                    b.HasIndex("CompanyId");

                    b.HasIndex("JobTypeId");

                    b.HasIndex("LocationId");

                    b.HasIndex("ProfessionId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("jobconnect.Models.JobType", b =>
                {
                    b.Property<int>("JobTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("JobTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JobTypeId"));

                    b.Property<string>("JobTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("JobTypeId")
                        .HasName("PK__JobTypes__E1F4624D00517FAF");

                    b.HasIndex(new[] { "JobTypeName" }, "UQ__JobTypes__2C951EA8F78FD137")
                        .IsUnique();

                    b.ToTable("JobTypes");
                });

            modelBuilder.Entity("jobconnect.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LocationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("LocationId")
                        .HasName("PK__Location__E7FEA47774A6D3E2");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("jobconnect.Models.Profession", b =>
                {
                    b.Property<int>("ProfessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProfessionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfessionId"));

                    b.Property<string>("ProfessionName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ProfessionId")
                        .HasName("PK__Professi__3F309E1F7A08370C");

                    b.HasIndex(new[] { "ProfessionName" }, "UQ__Professi__704E62FB9BBFA128")
                        .IsUnique();

                    b.ToTable("Professions");
                });

            modelBuilder.Entity("jobconnect.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__8AFACE3AC41ACACA");

                    b.HasIndex(new[] { "RoleName" }, "UQ__Roles__8A2B61609449FD77")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("jobconnect.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("AvatarURL");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int")
                        .HasColumnName("CompanyID");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCAC2029234F");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Username" }, "UQ__Users__536C85E4615D8EE7")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534E7FD123C")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("jobconnect.Models.Application", b =>
                {
                    b.HasOne("jobconnect.Models.Job", "Job")
                        .WithMany("Applications")
                        .HasForeignKey("JobId")
                        .HasConstraintName("FK__Applicati__JobID__66603565");

                    b.HasOne("jobconnect.Models.ApplicationStatus", "Status")
                        .WithMany("Applications")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK__Applicati__Statu__68487DD7");

                    b.HasOne("jobconnect.Models.User", "User")
                        .WithMany("Applications")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Applicati__UserI__6754599E");

                    b.Navigation("Job");

                    b.Navigation("Status");

                    b.Navigation("User");
                });

            modelBuilder.Entity("jobconnect.Models.Company", b =>
                {
                    b.HasOne("jobconnect.Models.Field", "Field")
                        .WithMany("Companies")
                        .HasForeignKey("FieldId")
                        .HasConstraintName("FK__Companies__Field__17036CC0");

                    b.Navigation("Field");
                });

            modelBuilder.Entity("jobconnect.Models.Feedback", b =>
                {
                    b.HasOne("jobconnect.Models.Interview", "Interview")
                        .WithMany("Feedbacks")
                        .HasForeignKey("InterviewId")
                        .HasConstraintName("FK__Feedbacks__Inter__6EF57B66");

                    b.Navigation("Interview");
                });

            modelBuilder.Entity("jobconnect.Models.Interview", b =>
                {
                    b.HasOne("jobconnect.Models.Application", "Application")
                        .WithMany("Interviews")
                        .HasForeignKey("ApplicationId")
                        .HasConstraintName("FK__Interview__Appli__6B24EA82");

                    b.Navigation("Application");
                });

            modelBuilder.Entity("jobconnect.Models.Job", b =>
                {
                    b.HasOne("jobconnect.Models.Company", "Company")
                        .WithMany("Jobs")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK__Jobs__CompanyID__628FA481");

                    b.HasOne("jobconnect.Models.JobType", "JobType")
                        .WithMany("Jobs")
                        .HasForeignKey("JobTypeId")
                        .HasConstraintName("FK__Jobs__JobTypeID__6383C8BA");

                    b.HasOne("jobconnect.Models.Location", "Location")
                        .WithMany("Jobs")
                        .HasForeignKey("LocationId")
                        .HasConstraintName("FK_Jobs_Locations");

                    b.HasOne("jobconnect.Models.Profession", "Profession")
                        .WithMany("Jobs")
                        .HasForeignKey("ProfessionId")
                        .HasConstraintName("FK__Jobs__Profession__1AD3FDA4");

                    b.Navigation("Company");

                    b.Navigation("JobType");

                    b.Navigation("Location");

                    b.Navigation("Profession");
                });

            modelBuilder.Entity("jobconnect.Models.User", b =>
                {
                    b.HasOne("jobconnect.Models.Company", "Company")
                        .WithMany("Users")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK__Users__CompanyID__5FB337D6");

                    b.HasOne("jobconnect.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__Users__RoleID__5EBF139D");

                    b.Navigation("Company");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("jobconnect.Models.Application", b =>
                {
                    b.Navigation("Interviews");
                });

            modelBuilder.Entity("jobconnect.Models.ApplicationStatus", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("jobconnect.Models.Company", b =>
                {
                    b.Navigation("Jobs");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("jobconnect.Models.Field", b =>
                {
                    b.Navigation("Companies");
                });

            modelBuilder.Entity("jobconnect.Models.Interview", b =>
                {
                    b.Navigation("Feedbacks");
                });

            modelBuilder.Entity("jobconnect.Models.Job", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("jobconnect.Models.JobType", b =>
                {
                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("jobconnect.Models.Location", b =>
                {
                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("jobconnect.Models.Profession", b =>
                {
                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("jobconnect.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("jobconnect.Models.User", b =>
                {
                    b.Navigation("Applications");
                });
#pragma warning restore 612, 618
        }
    }
}
